<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20181211 14:35:51.838" generator="Robot 3.0.4 (Python 3.5.2 on linux)">
<suite source="/opt/HAPPIEST_FRAMEWORK/Network_Protocol/BGP_OSPF/BGP_OSPF_Test_with_GNS3.robot" id="s1" name="BGP OSPF Test with GNS3">
<test id="s1-t1" name="Configure IP addresses as per the topology">
<kw library="Resource" name="Configure ip address">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${load_device_R1}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.174">${load_device_R1} = ['R1', ['Link_R1_R2_1', 'Link_R1_R3_1'], 'configure']</msg>
<status endtime="20181211 14:35:52.174" status="PASS" starttime="20181211 14:35:52.173"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${load_device_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.175">${load_device_R2} = ['R2', ['Link_R1_R2_1', 'Link_R2_R4_1', 'Link_R2_R3_1'], 'configure']</msg>
<status endtime="20181211 14:35:52.175" status="PASS" starttime="20181211 14:35:52.174"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${load_device_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.176">${load_device_R3} = ['R3', ['Link_R1_R3_1', 'Link_R3_R5_1', 'Link_R2_R3_1'], 'configure']</msg>
<status endtime="20181211 14:35:52.176" status="PASS" starttime="20181211 14:35:52.175"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${load_device_R4}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.176">${load_device_R4} = ['R4', ['Link_R2_R4_1', 'Link_R4_PC-1_1'], 'configure']</msg>
<status endtime="20181211 14:35:52.177" status="PASS" starttime="20181211 14:35:52.176"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${load_device_R5}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.177">${load_device_R5} = ['R5', ['Link_R3_R5_1', 'Link_R5_PC-2_1'], 'configure']</msg>
<status endtime="20181211 14:35:52.177" status="PASS" starttime="20181211 14:35:52.177"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>PC-1</arg>
<arg>configure</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${load_device_PC1}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.178">${load_device_PC1} = ['PC-1', 'configure', '255.255.255.0']</msg>
<status endtime="20181211 14:35:52.178" status="PASS" starttime="20181211 14:35:52.178"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Ubuntu</arg>
<arg>configure</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${load_device_PC2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.179">${load_device_PC2} = ['Ubuntu', 'configure', '255.255.255.0']</msg>
<status endtime="20181211 14:35:52.179" status="PASS" starttime="20181211 14:35:52.178"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${load_device_R1}</arg>
<arg>${load_device_R2}</arg>
<arg>${load_device_R3}</arg>
<arg>${load_device_R4}</arg>
<arg>${load_device_R5}</arg>
<arg>${load_device_PC1}</arg>
<arg>${load_device_PC2}</arg>
</arguments>
<assign>
<var>${load_devices}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:35:52.180">${load_devices} = [['R1', ['Link_R1_R2_1', 'Link_R1_R3_1'], 'configure'], ['R2', ['Link_R1_R2_1', 'Link_R2_R4_1', 'Link_R2_R3_1'], 'configure'], ['R3', ['Link_R1_R3_1', 'Link_R3_R5_1', 'Link_R2_R3_1'], 'configure'], ['...</msg>
<status endtime="20181211 14:35:52.180" status="PASS" starttime="20181211 14:35:52.179"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>start configure</arg>
<arg>${load_devices}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Start Configure">
<arguments>
<arg>${load_devices}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:36:43.641">Configuring IP address for R1Configuring IP address for R2Configuring IP address for R3Configuring IP address for R4Configuring IP address for R5Waiting thread #ConfigureRouter_R1
flag=0
flag=0
flag=0
flag=0
flag=0
b'\r\nR1#\r\nR1#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#              interface Ethernet 1/0\r\nR1(config-if)#\r\nR1(config-if)#              ip address 192.168.23.3  255.255.255.0\r\nR1(config-if)#\r\nR1(config-if)#              no shutdown\r\nR1(config-if)#\r\nR1(config-if)#              '
b'\r\nR4#\r\nR4#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#              interface Ethernet 1/0\r\nR4(config-if)#\r\nR4(config-if)#              ip address 192.168.12.1  255.255.255.0\r\nR4(config-if)#\r\nR4(config-if)#              no shutdown\r\nR4(config-if)#\r\nR4(config-if)#              '
b'\r\nR2#\r\nR2#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#              interface Ethernet 1/0\r\nR2(config-if)#\r\nR2(config-if)#              ip address 192.168.23.2  255.255.255.0\r\nR2(config-if)#\r\nR2(config-if)#              no shutdown\r\nR2(config-if)#\r\nR2(config-if)#              '
b'\r\nR5#\r\nR5#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#              interface Ethernet 1/0\r\nR5(config-if)#\r\nR5(config-if)#              ip address 192.168.45.6  255.255.255.0\r\nR5(config-if)#\r\nR5(config-if)#              no shutdown\r\nR5(config-if)#\r\nR5(config-if)#              '
b'\r\nR3#\r\nR3#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#              interface Ethernet 1/1\r\nR3(config-if)#\r\nR3(config-if)#              ip address 192.168.34.4  255.255.255.0\r\nR3(config-if)#\r\nR3(config-if)#              no shutdown\r\nR3(config-if)#\r\nR3(config-if)#              '
b'ip 192.168.70.20 255.255.255.0 192.168.70.10\r\nChecking for duplicate address...\r\nPC1 : 192.168.70.20 255.255.255.0 gateway 192.168.70.10\r\n\r\n\rPC-1&gt; '
b'\r\nR4#\r\nR4#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#              interface Ethernet 1/1\r\nR4(config-if)#\r\nR4(config-if)#              ip address 192.168.70.10  255.255.255.0\r\nR4(config-if)#\r\nR4(config-if)#              no shutdown\r\nR4(config-if)#\r\nR4(config-if)#              '
b'\r\nR2#\r\nR2#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#              interface Ethernet 1/1\r\nR2(config-if)#\r\nR2(config-if)#              ip address 192.168.12.2  255.255.255.0\r\nR2(config-if)#\r\nR2(config-if)#              no shutdown\r\nR2(config-if)#\r\nR2(config-if)#              '
Configured  IP Address for R4b'\r\nR1#\r\nR1#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#              interface Ethernet 1/1\r\nR1(config-if)#\r\nR1(config-if)#              ip address 192.168.34.3  255.255.255.0\r\nR1(config-if)#\r\nR1(config-if)#              no shutdown\r\nR1(config-if)#\r\nR1(config-if)#              '
Configured  IP Address for R1Waiting thread #ConfigureRouter_R2
b'\r\nR5#\r\nR5#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#              interface Ethernet 1/1\r\nR5(config-if)#\r\nR5(config-if)#              ip address 192.168.80.10  255.255.255.0\r\nR5(config-if)#\r\nR5(config-if)#              no shutdown\r\nR5(config-if)#\r\nR5(config-if)#              '
b'\r\nR3#\r\nR3#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#              interface Ethernet 1/0\r\nR3(config-if)#\r\nR3(config-if)#              ip address 192.168.45.4  255.255.255.0\r\nR3(config-if)#\r\nR3(config-if)#              no shutdown\r\nR3(config-if)#\r\nR3(config-if)#              '
Configured  IP Address for R5b'\r\nR2#\r\nR2#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#              interface Ethernet 1/2\r\nR2(config-if)#\r\nR2(config-if)#              ip address 192.168.50.2  255.255.255.0\r\nR2(config-if)#\r\nR2(config-if)#              no shutdown\r\nR2(config-if)#\r\nR2(config-if)#              '
Configured  IP Address for R2Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#              configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#              interface Ethernet 1/2\r\nR3(config-if)#\r\nR3(config-if)#              ip address 192.168.50.4  255.255.255.0\r\nR3(config-if)#\r\nR3(config-if)#              no shutdown\r\nR3(config-if)#\r\nR3(config-if)#              '
Configured  IP Address for R3Waiting thread #ConfigureRouter_R4
Waiting thread #ConfigureRouter_R5
Waiting thread #ConfigureRouter_PC-1
Waiting thread #ConfigureRouter_Ubuntu</msg>
<status endtime="20181211 14:36:43.642" status="PASS" starttime="20181211 14:35:52.181"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:36:43.642">${result} = True</msg>
<status endtime="20181211 14:36:43.642" status="PASS" starttime="20181211 14:35:52.181"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>IP address configuration failed</arg>
</arguments>
<status endtime="20181211 14:36:43.644" status="PASS" starttime="20181211 14:36:43.643"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured on all Routers</arg>
</arguments>
<status endtime="20181211 14:36:43.645" status="PASS" starttime="20181211 14:36:43.644"></status>
</kw>
<status endtime="20181211 14:36:43.645" status="PASS" starttime="20181211 14:35:52.173"></status>
</kw>
<status critical="yes" endtime="20181211 14:36:43.645" status="PASS" starttime="20181211 14:35:52.170"></status>
</test>
<test id="s1-t2" name="Configure loopback interface as per the topology">
<kw library="Resource" name="Set loopback interface">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
</arguments>
<status endtime="20181211 14:36:43.648" status="PASS" starttime="20181211 14:36:43.648"></status>
</kw>
<kw type="for" name="${var} IN [ @{Devices} ]">
<kw type="foritem" name="${var} = R1">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${var}</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${load_device}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:43.650">${load_device} = ['R1', 'set']</msg>
<status endtime="20181211 14:36:43.650" status="PASS" starttime="20181211 14:36:43.649"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${load_devices_lo}</arg>
<arg>${load_device}</arg>
</arguments>
<status endtime="20181211 14:36:43.650" status="PASS" starttime="20181211 14:36:43.650"></status>
</kw>
<status endtime="20181211 14:36:43.651" status="PASS" starttime="20181211 14:36:43.649"></status>
</kw>
<kw type="foritem" name="${var} = R2">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${var}</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${load_device}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:43.652">${load_device} = ['R2', 'set']</msg>
<status endtime="20181211 14:36:43.652" status="PASS" starttime="20181211 14:36:43.651"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${load_devices_lo}</arg>
<arg>${load_device}</arg>
</arguments>
<status endtime="20181211 14:36:43.652" status="PASS" starttime="20181211 14:36:43.652"></status>
</kw>
<status endtime="20181211 14:36:43.653" status="PASS" starttime="20181211 14:36:43.651"></status>
</kw>
<kw type="foritem" name="${var} = R3">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${var}</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${load_device}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:43.654">${load_device} = ['R3', 'set']</msg>
<status endtime="20181211 14:36:43.654" status="PASS" starttime="20181211 14:36:43.653"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${load_devices_lo}</arg>
<arg>${load_device}</arg>
</arguments>
<status endtime="20181211 14:36:43.654" status="PASS" starttime="20181211 14:36:43.654"></status>
</kw>
<status endtime="20181211 14:36:43.655" status="PASS" starttime="20181211 14:36:43.653"></status>
</kw>
<kw type="foritem" name="${var} = R4">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${var}</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${load_device}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:43.656">${load_device} = ['R4', 'set']</msg>
<status endtime="20181211 14:36:43.656" status="PASS" starttime="20181211 14:36:43.655"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${load_devices_lo}</arg>
<arg>${load_device}</arg>
</arguments>
<status endtime="20181211 14:36:43.656" status="PASS" starttime="20181211 14:36:43.656"></status>
</kw>
<status endtime="20181211 14:36:43.656" status="PASS" starttime="20181211 14:36:43.655"></status>
</kw>
<kw type="foritem" name="${var} = R5">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${var}</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${load_device}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:43.657">${load_device} = ['R5', 'set']</msg>
<status endtime="20181211 14:36:43.657" status="PASS" starttime="20181211 14:36:43.657"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${load_devices_lo}</arg>
<arg>${load_device}</arg>
</arguments>
<status endtime="20181211 14:36:43.658" status="PASS" starttime="20181211 14:36:43.658"></status>
</kw>
<status endtime="20181211 14:36:43.658" status="PASS" starttime="20181211 14:36:43.657"></status>
</kw>
<status endtime="20181211 14:36:43.658" status="PASS" starttime="20181211 14:36:43.648"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>start configure loopback</arg>
<arg>${load_devices_lo}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Start Configure Loopback">
<arguments>
<arg>${load_devices_lo}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:36:52.655">Waiting thread #ConfigureRouter_R1
b'\r\nR1#\r\nR1#          configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#          interface loopback0\r\nR1(config-if)#\r\nR1(config-if)#          ip address 1.1.1.1  255.255.255.255\r\nR1(config-if)#\r\nR1(config-if)#          end\r\nR1#\r\nR1#          '
b'\r\nR2#\r\nR2#          configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#          interface loopback0\r\nR2(config-if)#\r\nR2(config-if)#          ip address 2.2.2.2  255.255.255.255\r\nR2(config-if)#\r\nR2(config-if)#          end\r\nR2#\r\nR2#          '
Waiting thread #ConfigureRouter_R2
b'\r\nR3#\r\nR3#          configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#          interface loopback0\r\nR3(config-if)#\r\nR3(config-if)#          ip address 3.3.3.3  255.255.255.255\r\nR3(config-if)#\r\nR3(config-if)#          end\r\nR3#\r\nR3#          '
Waiting thread #ConfigureRouter_R3
Waiting thread #ConfigureRouter_R4
b'\r\nR4#\r\nR4#          configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#          interface loopback0\r\nR4(config-if)#\r\nR4(config-if)#          ip address 4.4.4.4  255.255.255.255\r\nR4(config-if)#\r\nR4(config-if)#          end\r\nR4#\r\nR4#          '
b'\r\nR5#\r\nR5#          configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#          interface loopback0\r\nR5(config-if)#\r\nR5(config-if)#          ip address 5.5.5.5  255.255.255.255\r\nR5(config-if)#\r\nR5(config-if)#          end\r\nR5#\r\nR5#          '
Waiting thread #ConfigureRouter_R5</msg>
<status endtime="20181211 14:36:52.656" status="PASS" starttime="20181211 14:36:43.659"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:36:52.656">${result} = True</msg>
<status endtime="20181211 14:36:52.656" status="PASS" starttime="20181211 14:36:43.659"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP failed</arg>
</arguments>
<status endtime="20181211 14:36:52.657" status="PASS" starttime="20181211 14:36:52.657"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured on all Routers</arg>
</arguments>
<status endtime="20181211 14:36:52.658" status="PASS" starttime="20181211 14:36:52.657"></status>
</kw>
<status endtime="20181211 14:36:52.658" status="PASS" starttime="20181211 14:36:43.647"></status>
</kw>
<status critical="yes" endtime="20181211 14:36:52.658" status="PASS" starttime="20181211 14:36:43.646"></status>
</test>
<test id="s1-t3" name="Configure OSPF within AS2 to advertise the connected networks">
<kw library="Resource" name="Enable OSPF in devices present in AS2 and set the ospf neighbors">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${load_device_R1}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:52.660">${load_device_R1} = ['R1', 1, ['192.168.23.0  0.0.0.255', '192.168.34.0  0.0.0.255', '1.1.1.0  0.0.0.255'], 0, 'enable']</msg>
<status endtime="20181211 14:36:52.660" status="PASS" starttime="20181211 14:36:52.660"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${load_device_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:52.661">${load_device_R2} = ['R2', 1, ['192.168.23.0  0.0.0.255', '192.168.50.0  0.0.0.255', '2.2.2.0  0.0.0.255'], 0, 'enable']</msg>
<status endtime="20181211 14:36:52.661" status="PASS" starttime="20181211 14:36:52.660"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${load_device_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:52.662">${load_device_R3} = ['R3', 1, ['192.168.34.0  0.0.0.255', '192.168.50.0  0.0.0.255', '3.3.3.0  0.0.0.255'], 0, 'enable']</msg>
<status endtime="20181211 14:36:52.662" status="PASS" starttime="20181211 14:36:52.661"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${load_device_R1}</arg>
<arg>${load_device_R2}</arg>
<arg>${load_device_R3}</arg>
</arguments>
<assign>
<var>${load_devices}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:36:52.662">${load_devices} = [['R1', 1, ['192.168.23.0  0.0.0.255', '192.168.34.0  0.0.0.255', '1.1.1.0  0.0.0.255'], 0, 'enable'], ['R2', 1, ['192.168.23.0  0.0.0.255', '192.168.50.0  0.0.0.255', '2.2.2.0  0.0.0.255'], 0, 'enabl...</msg>
<status endtime="20181211 14:36:52.662" status="PASS" starttime="20181211 14:36:52.662"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>start_configure_ospf</arg>
<arg>${load_devices}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Start Configure Ospf">
<arguments>
<arg>${load_devices}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:37:21.182">Waiting thread #ConfigureRouter_R1
b'\r\nR1#\r\nR1#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#                                router ospf 1\r\nR1(config-router)#\r\nR1(config-router)#                                network 192.168.23.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.23.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.23.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR1(config-router)#\r\nR1(config-router)#                                '
b'\r\nR2#\r\nR2#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                                router ospf 1\r\nR2(config-router)#\r\nR2(config-router)#                                network 192.168.23.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.23.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.23.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR2(config-router)#\r\nR2(config-router)#                                '
b'\r\nR3#\r\nR3#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                                router ospf 1\r\nR3(config-router)#\r\nR3(config-router)#                                network 192.168.34.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.34.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.34.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR3(config-router)#\r\nR3(config-router)#                                '
b'\r\nR1#\r\nR1#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#                                router ospf 1\r\nR1(config-router)#\r\nR1(config-router)#                                network 192.168.34.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.34.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.34.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR1(config-router)#\r\nR1(config-router)#                                '
b'\r\nR2#\r\nR2#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                                router ospf 1\r\nR2(config-router)#\r\nR2(config-router)#                                network 192.168.50.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.50.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.50.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR2(config-router)#\r\nR2(config-router)#                                '
b'\r\nR3#\r\nR3#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                                router ospf 1\r\nR3(config-router)#\r\nR3(config-router)#                                network 192.168.50.0  0.0.0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 192.168.50.0  0.0.0.         \x08\x08\x08\x08\x08\x08\x08\x08\x08255 area \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08network 192.168.50.0  0.0.0.255 area 0         \x08\x08\x08\x08\x08\x08\x08\x08\x08\r\nR3(config-router)#\r\nR3(config-router)#                                '
b'\r\nR1#\r\nR1#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR1(config)#\r\nR1(config)#                                router ospf 1\r\nR1(config-router)#\r\nR1(config-router)#                                network 1.1.1.0  0.0.0.255 \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 1.1.1.0  0.0.0.255 a         \x08\x08\x08\x08\x08\x08\x08\x08\x08rea 0\r\nR1(config-router)#\r\nR1(config-router)#                                '
Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                                router ospf 1\r\nR2(config-router)#\r\nR2(config-router)#                                network 2.2.2.0  0.0.0.255 \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 2.2.2.0  0.0.0.255 a         \x08\x08\x08\x08\x08\x08\x08\x08\x08rea 0\r\nR2(config-router)#\r\nR2(config-router)#                                '
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#                                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                                router ospf 1\r\nR3(config-router)#\r\nR3(config-router)#                                network 3.3.3.0  0.0.0.255 \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                     network 3.3.3.0  0.0.0.255 a         \x08\x08\x08\x08\x08\x08\x08\x08\x08rea 0\r\nR3(config-router)#\r\nR3(config-router)#                                '</msg>
<status endtime="20181211 14:37:21.183" status="PASS" starttime="20181211 14:36:52.663"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:37:21.183">${result} = True</msg>
<status endtime="20181211 14:37:21.183" status="PASS" starttime="20181211 14:36:52.662"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on Routers has failed</arg>
</arguments>
<status endtime="20181211 14:37:21.185" status="PASS" starttime="20181211 14:37:21.184"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in Routers</arg>
</arguments>
<status endtime="20181211 14:37:21.186" status="PASS" starttime="20181211 14:37:21.185"></status>
</kw>
<status endtime="20181211 14:37:21.186" status="PASS" starttime="20181211 14:36:52.659"></status>
</kw>
<status critical="yes" endtime="20181211 14:37:21.187" status="PASS" starttime="20181211 14:36:52.659"></status>
</test>
<test id="s1-t4" name="Configure IBGP and source the BGP updates from the loopback0 interfaces">
<kw library="Resource" name="Enable IBGP and advertise the updates from the loopback interface">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${ibgp_device_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:21.190">${ibgp_device_R2} = ['R2', 2, '3.3.3.3', 'enable']</msg>
<status endtime="20181211 14:37:21.190" status="PASS" starttime="20181211 14:37:21.190"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${ibgp_device_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:21.191">${ibgp_device_R3} = ['R3', 2, '2.2.2.2', 'enable']</msg>
<status endtime="20181211 14:37:21.192" status="PASS" starttime="20181211 14:37:21.191"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${ibgp_device_R2}</arg>
<arg>${ibgp_device_R3}</arg>
</arguments>
<assign>
<var>${ibgp_devices}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:21.193">${ibgp_devices} = [['R2', 2, '3.3.3.3', 'enable'], ['R3', 2, '2.2.2.2', 'enable']]</msg>
<status endtime="20181211 14:37:21.193" status="PASS" starttime="20181211 14:37:21.192"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>start ibgp</arg>
<arg>${ibgp_devices}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Start Ibgp">
<arguments>
<arg>${ibgp_devices}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:37:39.301">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                        configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                        router bgp 2\r\nR2(config-router)#\r\nR2(config-router)#                        neighbor 3.3.3.3 remote-as 2\r\nR2(config-router)#\r\nR2(config-router)#                        neighbor 3.3.3.3 update-source loop\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$             neighbor 3.3.3.3 update-source loopb         \x08\x08\x08\x08\x08\x08\x08\x08\x08ack 0\r\nR2(config-router)#\r\nR2(config-router)#                        '
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#                        configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                        router bgp 2\r\nR3(config-router)#\r\nR3(config-router)#                        neighbor 2.2.2.2 remote-as 2\r\nR3(config-router)#\r\nR3(config-router)#                        neighbor 2.2.2.2 update-source loop\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$             neighbor 2.2.2.2 update-source loopb         \x08\x08\x08\x08\x08\x08\x08\x08\x08ack 0\r\nR3(config-router)#\r\nR3(config-router)#                        '</msg>
<status endtime="20181211 14:37:39.301" status="PASS" starttime="20181211 14:37:21.194"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:37:39.302">${result} = True</msg>
<status endtime="20181211 14:37:39.302" status="PASS" starttime="20181211 14:37:21.193"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>IBGP configuration failed</arg>
</arguments>
<status endtime="20181211 14:37:39.303" status="PASS" starttime="20181211 14:37:39.302"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured on R2 and R3 routers</arg>
</arguments>
<status endtime="20181211 14:37:39.303" status="PASS" starttime="20181211 14:37:39.303"></status>
</kw>
<status endtime="20181211 14:37:39.303" status="PASS" starttime="20181211 14:37:21.189"></status>
</kw>
<status critical="yes" endtime="20181211 14:37:39.304" status="PASS" starttime="20181211 14:37:21.188"></status>
</test>
<test id="s1-t5" name="Enable BGP Synchronisation">
<kw library="Resource" name="Enable synchronisation between border routers">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<assign>
<var>${ibgp_sync_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:39.306">${ibgp_sync_R2} = ['R2', 2]</msg>
<status endtime="20181211 14:37:39.306" status="PASS" starttime="20181211 14:37:39.305"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<assign>
<var>${ibgp_sync_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:39.306">${ibgp_sync_R3} = ['R3', 2]</msg>
<status endtime="20181211 14:37:39.306" status="PASS" starttime="20181211 14:37:39.306"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${ibgp_sync_R2}</arg>
<arg>${ibgp_sync_R3}</arg>
</arguments>
<assign>
<var>${sync_enable}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:37:39.307">${sync_enable} = [['R2', 2], ['R3', 2]]</msg>
<status endtime="20181211 14:37:39.307" status="PASS" starttime="20181211 14:37:39.306"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable sync</arg>
<arg>${sync_enable}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Enable Sync">
<arguments>
<arg>${sync_enable}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:38:02.177">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                router bgp 2\r\nR2(config-router)#\r\nR2(config-router)#                synchronization\r\nR2(config-router)#\r\nR2(config-router)#                end\r\nR2#\r\nR2#                \r\nR2#\r\nR2#\r\n*Dec 11 14:08:14.886: %SYS-5-CONFIG_I: Configured from console by console\r\nR2#'
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                router bgp 2\r\nR3(config-router)#\r\nR3(config-router)#                synchronization\r\nR3(config-router)#\r\nR3(config-router)#                end\r\nR3#\r\nR3#                \r\nR3#\r\nR3#\r\n*Dec 11 14:09:15.306: %SYS-5-CONFIG_I: Configured from console by console\r\nR3#'</msg>
<status endtime="20181211 14:38:02.178" status="PASS" starttime="20181211 14:37:39.307"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:38:02.178">${result} = True</msg>
<status endtime="20181211 14:38:02.178" status="PASS" starttime="20181211 14:37:39.307"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>BGP synchronization failed</arg>
</arguments>
<status endtime="20181211 14:38:02.179" status="PASS" starttime="20181211 14:38:02.179"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Enabled BGP synchronization on R2 and R3 routers</arg>
</arguments>
<status endtime="20181211 14:38:02.180" status="PASS" starttime="20181211 14:38:02.180"></status>
</kw>
<status endtime="20181211 14:38:02.180" status="PASS" starttime="20181211 14:37:39.305"></status>
</kw>
<status critical="yes" endtime="20181211 14:38:02.180" status="PASS" starttime="20181211 14:37:39.304"></status>
</test>
<test id="s1-t6" name="Configure EBGP and source the BGP updates from the loopback0 interfaces">
<kw library="Resource" name="Enable BGP and advertise networks connected outside the autonomous system">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R2_einterface}</arg>
<arg>${R2_neighbor_AS_id}</arg>
<arg>enable</arg>
<arg>${R4_R2_network}</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${ebgp_device_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:02.183">${ebgp_device_R2} = ['R2', 2, '192.168.12.1', 1, 'enable', '192.168.12.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:02.183" status="PASS" starttime="20181211 14:38:02.182"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R3_einterface}</arg>
<arg>${R3_neighbor_AS_id}</arg>
<arg>enable</arg>
<arg>${R3_R5_network}</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${ebgp_device_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:02.184">${ebgp_device_R3} = ['R3', 2, '192.168.45.6', 3, 'enable', '192.168.45.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:02.184" status="PASS" starttime="20181211 14:38:02.183"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_einterface}</arg>
<arg>${R4_neighbor_AS_id}</arg>
<arg>enable</arg>
<arg>${R4_R2_network}</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${ebgp_device_R4}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:02.185">${ebgp_device_R4} = ['R4', 1, '192.168.12.2', 2, 'enable', '192.168.12.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:02.185" status="PASS" starttime="20181211 14:38:02.184"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_einterface}</arg>
<arg>${R5_neighbor_AS_id}</arg>
<arg>enable</arg>
<arg>${R3_R5_network}</arg>
<arg>${mask}</arg>
</arguments>
<assign>
<var>${ebgp_device_R5}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:02.185">${ebgp_device_R5} = ['R5', 3, '192.168.45.4', 2, 'enable', '192.168.45.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:02.186" status="PASS" starttime="20181211 14:38:02.185"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${ebgp_device_R2}</arg>
<arg>${ebgp_device_R3}</arg>
<arg>${ebgp_device_R4}</arg>
<arg>${ebgp_device_R5}</arg>
</arguments>
<assign>
<var>${ebgp_devices}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:02.186">${ebgp_devices} = [['R2', 2, '192.168.12.1', 1, 'enable', '192.168.12.0', '255.255.255.0'], ['R3', 2, '192.168.45.6', 3, 'enable', '192.168.45.0', '255.255.255.0'], ['R4', 1, '192.168.12.2', 2, 'enable', '192.168.12.0'...</msg>
<status endtime="20181211 14:38:02.186" status="PASS" starttime="20181211 14:38:02.186"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>ebgp configure</arg>
<arg>${ebgp_devices}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Ebgp Configure">
<arguments>
<arg>${ebgp_devices}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:38:20.078">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                            configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                            router bgp 2\r\nR2(config-router)#\r\nR2(config-router)#                            neighbor 192.168.12.1 remote-as\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 neighbor 192.168.12.1 remote-as          \x08\x08\x08\x08\x08\x08\x08\x08\x081\r\nR2(config-router)#\r\nR2(config-router)#                            network 192.168.12.0 mask 255.2\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 network 192.168.12.0 mask 255.25         \x08\x08\x08\x08\x08\x08\x08\x08\x085.255.0\r\nR2(config-router)#\r\nR2(config-router)#                            '
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#                            configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                            router bgp 2\r\nR3(config-router)#\r\nR3(config-router)#                            neighbor 192.168.45.6 remote-as\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 neighbor 192.168.45.6 remote-as          \x08\x08\x08\x08\x08\x08\x08\x08\x083\r\nR3(config-router)#\r\nR3(config-router)#                            network 192.168.45.0 mask 255.2\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 network 192.168.45.0 mask 255.25         \x08\x08\x08\x08\x08\x08\x08\x08\x085.255.0\r\nR3(config-router)#\r\nR3(config-router)#                            '
b'\r\nR4#\r\nR4#                            configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#                            router bgp 1\r\nR4(config-router)#\r\nR4(config-router)#                            neighbor 192.168.12.2 remote-as\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 neighbor 192.168.12.2 remote-as          \x08\x08\x08\x08\x08\x08\x08\x08\x082\r\nR4(config-router)#\r\nR4(config-router)#                            network 192.168.12.0 mask 255.2\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 network 192.168.12.0 mask 255.25         \x08\x08\x08\x08\x08\x08\x08\x08\x085.255.0\r\nR4(config-router)#\r\nR4(config-router)#                            '
Waiting thread #ConfigureRouter_R4
Waiting thread #ConfigureRouter_R5
b'\r\nR5#\r\nR5#                            configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#                            router bgp 3\r\nR5(config-router)#\r\nR5(config-router)#                            neighbor 192.168.45.4 remote-as\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 neighbor 192.168.45.4 remote-as          \x08\x08\x08\x08\x08\x08\x08\x08\x082\r\nR5(config-router)#\r\nR5(config-router)#                            network 192.168.45.0 mask 255.2\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08$                 network 192.168.45.0 mask 255.25         \x08\x08\x08\x08\x08\x08\x08\x08\x085.255.0\r\nR5(config-router)#\r\nR5(config-router)#                            '</msg>
<status endtime="20181211 14:38:20.079" status="PASS" starttime="20181211 14:38:02.187"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:38:20.079">${result} = True</msg>
<status endtime="20181211 14:38:20.079" status="PASS" starttime="20181211 14:38:02.187"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>EBGP configuration failed</arg>
</arguments>
<status endtime="20181211 14:38:20.081" status="PASS" starttime="20181211 14:38:20.080"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EBGP configured on Routers R2,R3,R4 and R5</arg>
</arguments>
<status endtime="20181211 14:38:20.082" status="PASS" starttime="20181211 14:38:20.081"></status>
</kw>
<status endtime="20181211 14:38:20.082" status="PASS" starttime="20181211 14:38:02.182"></status>
</kw>
<kw library="Resource" name="Advertise loopback interface on AS1 and AS3">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_interface}</arg>
<arg>${R4_mask}</arg>
</arguments>
<assign>
<var>${adv_R4}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:20.084">${adv_R4} = ['R4', 1, '4.4.4.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:20.084" status="PASS" starttime="20181211 14:38:20.083"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_interface}</arg>
<arg>${R5_mask}</arg>
</arguments>
<assign>
<var>${adv_R5}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:20.085">${adv_R5} = ['R5', 3, '5.5.5.0', '255.255.255.0']</msg>
<status endtime="20181211 14:38:20.085" status="PASS" starttime="20181211 14:38:20.084"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${adv_R4}</arg>
<arg>${adv_R5}</arg>
</arguments>
<assign>
<var>${adv_devices}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:20.086">${adv_devices} = [['R4', 1, '4.4.4.0', '255.255.255.0'], ['R5', 3, '5.5.5.0', '255.255.255.0']]</msg>
<status endtime="20181211 14:38:20.086" status="PASS" starttime="20181211 14:38:20.085"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>advertise loopback</arg>
<arg>${adv_devices}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Advertise Loopback">
<arguments>
<arg>${adv_devices}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:38:42.757">Waiting thread #ConfigureRouter_R4
b'\r\nR4#\r\nR4#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#                router bgp 1\r\nR4(config-router)#\r\nR4(config-router)#                network 4.4.4.0 mask 255.255.255.0\r\nR4(config-router)#\r\nR4(config-router)#                end\r\nR4#\r\nR4#                \r\nR4#\r\nR4#\r\n*Dec 11 14:06:06.182: %SYS-5-CONFIG_I: Configured from console by console\r\nR4#'
b'\r\nR5#\r\nR5#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#                router bgp 3\r\nR5(config-router)#\r\nR5(config-router)#                network 5.5.5.0 mask 255.255.255.0\r\nR5(config-router)#\r\nR5(config-router)#                end\r\nR5#\r\nR5#                \r\nR5#\r\nR5#\r\n*Dec 11 14:01:05.730: %SYS-5-CONFIG_I: Configured from console by console\r\nR5#'
Waiting thread #ConfigureRouter_R5</msg>
<status endtime="20181211 14:38:42.758" status="PASS" starttime="20181211 14:38:20.087"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:38:42.758">${result} = True</msg>
<status endtime="20181211 14:38:42.758" status="PASS" starttime="20181211 14:38:20.086"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Advertising Loopback configuration failed</arg>
</arguments>
<status endtime="20181211 14:38:42.760" status="PASS" starttime="20181211 14:38:42.759"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback interface is advertised to AS1 and AS3</arg>
</arguments>
<status endtime="20181211 14:38:42.761" status="PASS" starttime="20181211 14:38:42.760"></status>
</kw>
<status endtime="20181211 14:38:42.761" status="PASS" starttime="20181211 14:38:20.082"></status>
</kw>
<kw library="Resource" name="Establish route between R2 and R3">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R3_lointerface}</arg>
</arguments>
<assign>
<var>${route_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:42.763">${route_R2} = ['R2', 2, '3.3.3.3']</msg>
<status endtime="20181211 14:38:42.763" status="PASS" starttime="20181211 14:38:42.762"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R2_lointerface}</arg>
</arguments>
<assign>
<var>${route_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:42.764">${route_R3} = ['R3', 2, '2.2.2.2']</msg>
<status endtime="20181211 14:38:42.764" status="PASS" starttime="20181211 14:38:42.764"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${route_R2}</arg>
<arg>${route_R3}</arg>
</arguments>
<assign>
<var>${routes}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:38:42.765">${routes} = [['R2', 2, '3.3.3.3'], ['R3', 2, '2.2.2.2']]</msg>
<status endtime="20181211 14:38:42.765" status="PASS" starttime="20181211 14:38:42.765"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>establish route</arg>
<arg>${routes}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Establish Route">
<arguments>
<arg>${routes}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:39:05.439">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                router bgp 2\r\nR2(config-router)#\r\nR2(config-router)#                neighbor 3.3.3.3 next-hop-self\r\nR2(config-router)#\r\nR2(config-router)#                end\r\nR2#\r\nR2#                \r\nR2#\r\nR2#\r\n*Dec 11 14:09:18.194: %SYS-5-CONFIG_I: Configured from console by console\r\nR2#'
b'\r\nR3#\r\nR3#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                router bgp 2\r\nR3(config-router)#\r\nR3(config-router)#                neighbor 2.2.2.2 next-hop-self\r\nR3(config-router)#\r\nR3(config-router)#                end\r\nR3#\r\nR3#                \r\nR3#\r\nR3#\r\n*Dec 11 14:10:18.554: %SYS-5-CONFIG_I: Configured from console by console\r\nR3#'
Waiting thread #ConfigureRouter_R3</msg>
<status endtime="20181211 14:39:05.440" status="PASS" starttime="20181211 14:38:42.766"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:39:05.440">${result} = True</msg>
<status endtime="20181211 14:39:05.440" status="PASS" starttime="20181211 14:38:42.766"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Establishment of route between R2 and R3 failed</arg>
</arguments>
<status endtime="20181211 14:39:05.441" status="PASS" starttime="20181211 14:39:05.440"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Established route between R2 and R3</arg>
</arguments>
<status endtime="20181211 14:39:05.442" status="PASS" starttime="20181211 14:39:05.442"></status>
</kw>
<status endtime="20181211 14:39:05.442" status="PASS" starttime="20181211 14:38:42.762"></status>
</kw>
<status critical="yes" endtime="20181211 14:39:05.442" status="PASS" starttime="20181211 14:38:02.181"></status>
</test>
<test id="s1-t7" name="Redistribute routes from OSPF into BGP">
<kw library="Resource" name="Redistribute routes from OSPF into BGP">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Redistributing routes from OSPF into BGP</arg>
</arguments>
<status endtime="20181211 14:39:05.444" status="PASS" starttime="20181211 14:39:05.444"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<assign>
<var>${redistribution_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:05.445">${redistribution_R2} = ['R2', 2, 1]</msg>
<status endtime="20181211 14:39:05.445" status="PASS" starttime="20181211 14:39:05.445"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<assign>
<var>${redistribution_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:05.446">${redistribution_R3} = ['R3', 2, 1]</msg>
<status endtime="20181211 14:39:05.446" status="PASS" starttime="20181211 14:39:05.445"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${redistribution_R2}</arg>
<arg>${redistribution_R3}</arg>
</arguments>
<assign>
<var>${redistribute_ospf}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:05.447">${redistribute_ospf} = [['R2', 2, 1], ['R3', 2, 1]]</msg>
<status endtime="20181211 14:39:05.447" status="PASS" starttime="20181211 14:39:05.446"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>redistribute ospf</arg>
<arg>${redistribute_ospf}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Redistribute Ospf">
<arguments>
<arg>${redistribute_ospf}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:39:23.274">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR2(config)#\r\nR2(config)#                router bgp 2\r\nR2(config-router)#\r\nR2(config-router)#                redistribute ospf 1\r\nR2(config-router)#\r\nR2(config-router)#                '
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#                configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR3(config)#\r\nR3(config)#                router bgp 2\r\nR3(config-router)#\r\nR3(config-router)#                redistribute ospf 1\r\nR3(config-router)#\r\nR3(config-router)#                '</msg>
<status endtime="20181211 14:39:23.274" status="PASS" starttime="20181211 14:39:05.448"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:39:23.275">${result} = True</msg>
<status endtime="20181211 14:39:23.275" status="PASS" starttime="20181211 14:39:05.447"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Redistribution of routes from OSPF into BGP failed</arg>
</arguments>
<status endtime="20181211 14:39:23.276" status="PASS" starttime="20181211 14:39:23.275"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Redistributed routes from OSPF into BGP</arg>
</arguments>
<status endtime="20181211 14:39:23.277" status="PASS" starttime="20181211 14:39:23.277"></status>
</kw>
<status endtime="20181211 14:39:23.277" status="PASS" starttime="20181211 14:39:05.444"></status>
</kw>
<status critical="yes" endtime="20181211 14:39:23.278" status="PASS" starttime="20181211 14:39:05.443"></status>
</test>
<test id="s1-t8" name="Redistribute connnected routes into BGP">
<kw library="Resource" name="Redistribute connnected routes into BGP">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Redistributing connected routes into BGP</arg>
</arguments>
<status endtime="20181211 14:39:23.281" status="PASS" starttime="20181211 14:39:23.280"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
</arguments>
<assign>
<var>${redistribution_R4}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:23.282">${redistribution_R4} = ['R4', 1]</msg>
<status endtime="20181211 14:39:23.282" status="PASS" starttime="20181211 14:39:23.281"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
</arguments>
<assign>
<var>${redistribution_R5}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:23.283">${redistribution_R5} = ['R5', 3]</msg>
<status endtime="20181211 14:39:23.283" status="PASS" starttime="20181211 14:39:23.282"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${redistribution_R4}</arg>
<arg>${redistribution_R5}</arg>
</arguments>
<assign>
<var>${connected}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:23.284">${connected} = [['R4', 1], ['R5', 3]]</msg>
<status endtime="20181211 14:39:23.284" status="PASS" starttime="20181211 14:39:23.283"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>redistribute connected</arg>
<arg>${connected}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Redistribute Connected">
<arguments>
<arg>${connected}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:39:46.012">Waiting thread #ConfigureRouter_R4
b'\r\nR4#\r\nR4#                                  configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR4(config)#\r\nR4(config)#                                  router bgp 1\r\nR4(config-router)#\r\nR4(config-router)#                                  redistribute connected\r\nR4(config-router)#\r\nR4(config-router)#                                  end\r\nR4#\r\nR4#                                  \r\nR4#\r\nR4#\r\n*Dec 11 14:07:09.306: %SYS-5-CONFIG_I: Configured from console by console\r\nR4#'
Waiting thread #ConfigureRouter_R5
b'\r\nR5#\r\nR5#                                  configure terminal\r\nEnter configuration commands, one per line.  End with CNTL/Z.\r\nR5(config)#\r\nR5(config)#                                  router bgp 3\r\nR5(config-router)#\r\nR5(config-router)#                                  redistribute connected\r\nR5(config-router)#\r\nR5(config-router)#                                  end\r\nR5#\r\nR5#                                  \r\nR5#\r\nR5#\r\n*Dec 11 14:02:08.962: %SYS-5-CONFIG_I: Configured from console by console\r\nR5#'</msg>
<status endtime="20181211 14:39:46.012" status="PASS" starttime="20181211 14:39:23.285"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:39:46.013">${result} = True</msg>
<status endtime="20181211 14:39:46.013" status="PASS" starttime="20181211 14:39:23.284"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Redistribution of connected routes failed</arg>
</arguments>
<status endtime="20181211 14:39:46.014" status="PASS" starttime="20181211 14:39:46.013"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Redistributed connnected routes into BGP</arg>
</arguments>
<status endtime="20181211 14:39:46.015" status="PASS" starttime="20181211 14:39:46.014"></status>
</kw>
<status endtime="20181211 14:39:46.015" status="PASS" starttime="20181211 14:39:23.280"></status>
</kw>
<status critical="yes" endtime="20181211 14:39:46.016" status="PASS" starttime="20181211 14:39:23.279"></status>
</test>
<test id="s1-t9" name="Check if ip address is set and interface is up">
<kw library="Resource" name="Check if ip address is set and interface is up">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if IP address is set and interface is up</arg>
</arguments>
<status endtime="20181211 14:39:46.018" status="PASS" starttime="20181211 14:39:46.018"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R1</arg>
<arg>show interfaces description</arg>
</arguments>
<assign>
<var>${ip_set_R1}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.019">${ip_set_R1} = ['R1', 'show interfaces description']</msg>
<status endtime="20181211 14:39:46.019" status="PASS" starttime="20181211 14:39:46.019"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>show interfaces description</arg>
</arguments>
<assign>
<var>${ip_set_R2}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.020">${ip_set_R2} = ['R2', 'show interfaces description']</msg>
<status endtime="20181211 14:39:46.020" status="PASS" starttime="20181211 14:39:46.019"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>show interfaces description</arg>
</arguments>
<assign>
<var>${ip_set_R3}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.021">${ip_set_R3} = ['R3', 'show interfaces description']</msg>
<status endtime="20181211 14:39:46.021" status="PASS" starttime="20181211 14:39:46.020"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R4</arg>
<arg>show interfaces description</arg>
</arguments>
<assign>
<var>${ip_set_R4}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.021">${ip_set_R4} = ['R4', 'show interfaces description']</msg>
<status endtime="20181211 14:39:46.021" status="PASS" starttime="20181211 14:39:46.021"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R5</arg>
<arg>show interfaces description</arg>
</arguments>
<assign>
<var>${ip_set_R5}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.022">${ip_set_R5} = ['R5', 'show interfaces description']</msg>
<status endtime="20181211 14:39:46.022" status="PASS" starttime="20181211 14:39:46.022"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${ip_set_R1}</arg>
<arg>${ip_set_R2}</arg>
<arg>${ip_set_R3}</arg>
<arg>${ip_set_R4}</arg>
<arg>${ip_set_R4}</arg>
</arguments>
<assign>
<var>${show_ip_interface}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:39:46.023">${show_ip_interface} = [['R1', 'show interfaces description'], ['R2', 'show interfaces description'], ['R3', 'show interfaces description'], ['R4', 'show interfaces description'], ['R4', 'show interfaces description']]</msg>
<status endtime="20181211 14:39:46.023" status="PASS" starttime="20181211 14:39:46.022"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>show ip interface</arg>
<arg>${show_ip_interface}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Show Ip Interface">
<arguments>
<arg>${show_ip_interface}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:40:08.714">Waiting thread #ConfigureRouter_R1
b'\r\nR1#\r\nR1#        show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          admin down     down     \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR1#       \r\nR1#\r\nR1#'
Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#        show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          up             up       \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR2#       \r\nR2#\r\nR2#'
b'\r\nR3#\r\nR3#        show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          up             up       \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR3#       \r\nR3#\r\nR3#'
Waiting thread #ConfigureRouter_R3
b'\r\nR4#\r\nR4#\r\nR4#\r\nR4#        show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          admin down     down     \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR4#       show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          admin down     down     \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR4#               \r\nR4#\r\nR4#\r\nR4#\r\nR4#'
b'\r\nR4#\r\nR4#\r\nR4#\r\nR4#        show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          admin down     down     \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR4#       show interfaces description\r\nInterface                      Status         Protocol Description\r\nFa0/0                          admin down     down     \r\nEt1/0                          up             up       \r\nEt1/1                          up             up       \r\nEt1/2                          admin down     down     \r\nEt1/3                          admin down     down     \r\nEt2/0                          admin down     down     \r\nEt2/1                          admin down     down     \r\nEt2/2                          admin down     down     \r\nEt2/3                          admin down     down     \r\nEt3/0                          admin down     down     \r\nEt3/1                          admin down     down     \r\nEt3/2                          admin down     down     \r\nEt3/3                          admin down     down     \r\nEt4/0                          admin down     down     \r\nEt4/1                          admin down     down     \r\nEt4/2                          admin down     down     \r\nEt4/3                          admin down     down     \r\nEt5/0                          admin down     down     \r\nEt5/1                          admin down     down     \r\nEt5/2                          admin down     down     \r\nEt5/3                          admin down     down     \r\nEt6/0                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/1                          admin down     down     \r\n --More-- \x08\x08\x08\x08\x08\x08\x08\x08\x08        \x08\x08\x08\x08\x08\x08\x08\x08\x08Et6/2                          admin down     down     \r\nEt6/3                          admin down     down     \r\nLo0                            up             up       \r\nR4#               \r\nR4#\r\nR4#\r\nR4#\r\nR4#'
Waiting thread #ConfigureRouter_R4
Waiting thread #ConfigureRouter_R4</msg>
<status endtime="20181211 14:40:08.714" status="PASS" starttime="20181211 14:39:46.024"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:40:08.715">${result} = True</msg>
<status endtime="20181211 14:40:08.715" status="PASS" starttime="20181211 14:39:46.023"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>IP address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status endtime="20181211 14:40:08.716" status="PASS" starttime="20181211 14:40:08.715"></status>
</kw>
<status endtime="20181211 14:40:08.717" status="PASS" starttime="20181211 14:39:46.017"></status>
</kw>
<status critical="yes" endtime="20181211 14:40:08.717" status="PASS" starttime="20181211 14:39:46.017"></status>
</test>
<test id="s1-t10" name="Check if OSPF neighbors are established">
<kw library="Resource" name="Check if OSPF neighbors are established">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if OSPF neighbors are established</arg>
</arguments>
<status endtime="20181211 14:40:08.720" status="PASS" starttime="20181211 14:40:08.719"></status>
</kw>
<kw type="for" name="${ELEMENT} IN RANGE [ 0 | 3 ]">
<kw type="foritem" name="${ELEMENT} = 0">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${neighbor}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:08.721">${neighbor} = ['R1', 'show ip ospf neighbor']</msg>
<status endtime="20181211 14:40:08.721" status="PASS" starttime="20181211 14:40:08.721"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${ospf_neighbor}</arg>
<arg>${neighbor}</arg>
</arguments>
<status endtime="20181211 14:40:08.722" status="PASS" starttime="20181211 14:40:08.722"></status>
</kw>
<status endtime="20181211 14:40:08.722" status="PASS" starttime="20181211 14:40:08.720"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = 1">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${neighbor}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:08.723">${neighbor} = ['R2', 'show ip ospf neighbor']</msg>
<status endtime="20181211 14:40:08.723" status="PASS" starttime="20181211 14:40:08.723"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${ospf_neighbor}</arg>
<arg>${neighbor}</arg>
</arguments>
<status endtime="20181211 14:40:08.724" status="PASS" starttime="20181211 14:40:08.724"></status>
</kw>
<status endtime="20181211 14:40:08.724" status="PASS" starttime="20181211 14:40:08.722"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = 2">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${neighbor}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:08.725">${neighbor} = ['R3', 'show ip ospf neighbor']</msg>
<status endtime="20181211 14:40:08.725" status="PASS" starttime="20181211 14:40:08.725"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${ospf_neighbor}</arg>
<arg>${neighbor}</arg>
</arguments>
<status endtime="20181211 14:40:08.726" status="PASS" starttime="20181211 14:40:08.726"></status>
</kw>
<status endtime="20181211 14:40:08.726" status="PASS" starttime="20181211 14:40:08.724"></status>
</kw>
<status endtime="20181211 14:40:08.726" status="PASS" starttime="20181211 14:40:08.720"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>show ospf neighbor</arg>
<arg>${ospf_neighbor}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Show Ospf Neighbor">
<arguments>
<arg>${ospf_neighbor}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:40:31.301">Waiting thread #ConfigureRouter_R1
b'\r\nR1#\r\nR1#        show ip ospf neighbor\r\n\r\nNeighbor ID     Pri   State           Dead Time   Address         Interface\r\n3.3.3.3           1   FULL/BDR        00:00:34    192.168.34.4    Ethernet1/1\r\n2.2.2.2           1   FULL/DR         00:00:38    192.168.23.2    Ethernet1/0\r\nR1#\r\nR1#        \r\nR1#\r\nR1#'
Waiting thread #ConfigureRouter_R2
b'\r\nR3#\r\nR3#        show ip ospf neighbor\r\n\r\nNeighbor ID     Pri   State           Dead Time   Address         Interface\r\n2.2.2.2           1   FULL/DR         00:00:33    192.168.50.2    Ethernet1/2\r\n1.1.1.1           1   FULL/DR         00:00:31    192.168.34.3    Ethernet1/1\r\nR3#\r\nR3#        \r\nR3#\r\nR3#'
b'\r\nR2#\r\nR2#        show ip ospf neighbor\r\n\r\nNeighbor ID     Pri   State           Dead Time   Address         Interface\r\n3.3.3.3           1   FULL/BDR        00:00:33    192.168.50.4    Ethernet1/2\r\n1.1.1.1           1   FULL/BDR        00:00:29    192.168.23.3    Ethernet1/0\r\nR2#\r\nR2#        \r\nR2#\r\nR2#'
Waiting thread #ConfigureRouter_R3</msg>
<status endtime="20181211 14:40:31.301" status="PASS" starttime="20181211 14:40:08.727"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:40:31.302">${result} = True</msg>
<status endtime="20181211 14:40:31.302" status="PASS" starttime="20181211 14:40:08.727"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>OSPF neighbors are not established in the routers</arg>
</arguments>
<status endtime="20181211 14:40:31.303" status="PASS" starttime="20181211 14:40:31.302"></status>
</kw>
<status endtime="20181211 14:40:31.303" status="PASS" starttime="20181211 14:40:08.718"></status>
</kw>
<status critical="yes" endtime="20181211 14:40:31.304" status="PASS" starttime="20181211 14:40:08.717"></status>
</test>
<test id="s1-t11" name="Check if BGP sessions are established">
<kw library="Resource" name="Check if BGP sessions are established">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if all BGP sessions are established</arg>
</arguments>
<status endtime="20181211 14:40:31.306" status="PASS" starttime="20181211 14:40:31.306"></status>
</kw>
<kw type="for" name="${ELEMENT} IN RANGE [ 1 | 5 ]">
<kw type="foritem" name="${ELEMENT} = 1">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip bgp summary</arg>
</arguments>
<assign>
<var>${bgp}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:31.308">${bgp} = ['R2', 'show ip bgp summary']</msg>
<status endtime="20181211 14:40:31.308" status="PASS" starttime="20181211 14:40:31.307"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${bgp_summary}</arg>
<arg>${bgp}</arg>
</arguments>
<status endtime="20181211 14:40:31.308" status="PASS" starttime="20181211 14:40:31.308"></status>
</kw>
<status endtime="20181211 14:40:31.308" status="PASS" starttime="20181211 14:40:31.307"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = 2">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip bgp summary</arg>
</arguments>
<assign>
<var>${bgp}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:31.309">${bgp} = ['R3', 'show ip bgp summary']</msg>
<status endtime="20181211 14:40:31.310" status="PASS" starttime="20181211 14:40:31.309"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${bgp_summary}</arg>
<arg>${bgp}</arg>
</arguments>
<status endtime="20181211 14:40:31.310" status="PASS" starttime="20181211 14:40:31.310"></status>
</kw>
<status endtime="20181211 14:40:31.310" status="PASS" starttime="20181211 14:40:31.309"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = 3">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip bgp summary</arg>
</arguments>
<assign>
<var>${bgp}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:31.311">${bgp} = ['R4', 'show ip bgp summary']</msg>
<status endtime="20181211 14:40:31.311" status="PASS" starttime="20181211 14:40:31.311"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${bgp_summary}</arg>
<arg>${bgp}</arg>
</arguments>
<status endtime="20181211 14:40:31.312" status="PASS" starttime="20181211 14:40:31.312"></status>
</kw>
<status endtime="20181211 14:40:31.312" status="PASS" starttime="20181211 14:40:31.311"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = 4">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{Devices}[${ELEMENT}]</arg>
<arg>show ip bgp summary</arg>
</arguments>
<assign>
<var>${bgp}</var>
</assign>
<msg level="INFO" timestamp="20181211 14:40:31.313">${bgp} = ['R5', 'show ip bgp summary']</msg>
<status endtime="20181211 14:40:31.313" status="PASS" starttime="20181211 14:40:31.313"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${bgp_summary}</arg>
<arg>${bgp}</arg>
</arguments>
<status endtime="20181211 14:40:31.314" status="PASS" starttime="20181211 14:40:31.314"></status>
</kw>
<status endtime="20181211 14:40:31.314" status="PASS" starttime="20181211 14:40:31.312"></status>
</kw>
<status endtime="20181211 14:40:31.314" status="PASS" starttime="20181211 14:40:31.306"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>show bgp summary</arg>
<arg>${bgp_summary}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="config_ip" name="Show Bgp Summary">
<arguments>
<arg>${bgp_summary}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:40:53.946">Waiting thread #ConfigureRouter_R2
b'\r\nR2#\r\nR2#              show ip bgp summary\r\nBGP router identifier 2.2.2.2, local AS number 2\r\nBGP table version is 60, main routing table version 60\r\n12 network entries using 1404 bytes of memory\r\n19 path entries using 988 bytes of memory\r\n12/7 BGP path/bestpath attribute entries using 1488 bytes of memory\r\n2 BGP AS-PATH entries using 48 bytes of memory\r\n0 BGP route-map cache entries using 0 bytes of memory\r\n0 BGP filter-list cache entries using 0 bytes of memory\r\nBGP using 3928 total bytes of memory\r\nBGP activity 24/12 prefixes, 57/38 paths, scan interval 60 secs\r\n\r\nNeighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd\r\n3.3.3.3         4     2      67      60       60    0    0 00:14:28        9\r\n192.168.12.1    4     1      47      61       60    0    0 00:14:12        3\r\nR2#\r\nR2#              \r\nR2#\r\nR2#'
Waiting thread #ConfigureRouter_R3
b'\r\nR3#\r\nR3#              show ip bgp summary\r\nBGP router identifier 3.3.3.3, local AS number 2\r\nBGP table version is 36, main routing table version 36\r\n12 network entries using 1404 bytes of memory\r\n19 path entries using 988 bytes of memory\r\n12/7 BGP path/bestpath attribute entries using 1488 bytes of memory\r\n2 BGP AS-PATH entries using 48 bytes of memory\r\n0 BGP route-map cache entries using 0 bytes of memory\r\n0 BGP filter-list cache entries using 0 bytes of memory\r\nBGP using 3928 total bytes of memory\r\nBGP activity 24/12 prefixes, 51/32 paths, scan interval 60 secs\r\n\r\nNeighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd\r\n2.2.2.2         4     2      60      67       36    0    0 00:14:28        9\r\n192.168.45.6    4     3      47      63       36    0    0 00:14:03        3\r\nR3#\r\nR3#              \r\nR3#\r\nR3#'
b'\r\nR4#\r\nR4#              show ip bgp summary\r\nBGP router identifier 4.4.4.4, local AS number 1\r\nBGP table version is 13, main routing table version 13\r\n12 network entries using 1404 bytes of memory\r\n13 path entries using 676 bytes of memory\r\n9/7 BGP path/bestpath attribute entries using 1116 bytes of memory\r\n2 BGP AS-PATH entries using 48 bytes of memory\r\n0 BGP route-map cache entries using 0 bytes of memory\r\n0 BGP filter-list cache entries using 0 bytes of memory\r\nBGP using 3244 total bytes of memory\r\nBGP activity 24/12 prefixes, 33/20 paths, scan interval 60 secs\r\n\r\nNeighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd\r\n192.168.12.2    4     2      61      47       13    0    0 00:14:12       10\r\nR4#\r\nR4#              \r\nR4#\r\nR4#'
Waiting thread #ConfigureRouter_R4
b'\r\nR5#\r\nR5#              show ip bgp summary\r\nBGP router identifier 5.5.5.5, local AS number 3\r\nBGP table version is 14, main routing table version 14\r\n12 network entries using 1404 bytes of memory\r\n13 path entries using 676 bytes of memory\r\n9/7 BGP path/bestpath attribute entries using 1116 bytes of memory\r\n2 BGP AS-PATH entries using 48 bytes of memory\r\n0 BGP route-map cache entries using 0 bytes of memory\r\n0 BGP filter-list cache entries using 0 bytes of memory\r\nBGP using 3244 total bytes of memory\r\nBGP activity 24/12 prefixes, 29/16 paths, scan interval 60 secs\r\n\r\nNeighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd\r\n192.168.45.4    4     2      63      47       14    0    0 00:14:03       10\r\nR5#\r\nR5#              \r\nR5#\r\nR5#'
Waiting thread #ConfigureRouter_R5</msg>
<status endtime="20181211 14:40:53.947" status="PASS" starttime="20181211 14:40:31.315"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:40:53.947">${result} = True</msg>
<status endtime="20181211 14:40:53.947" status="PASS" starttime="20181211 14:40:31.314"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>BGP sessions are not established in the routers</arg>
</arguments>
<status endtime="20181211 14:40:53.948" status="PASS" starttime="20181211 14:40:53.948"></status>
</kw>
<status endtime="20181211 14:40:53.949" status="PASS" starttime="20181211 14:40:31.305"></status>
</kw>
<status critical="yes" endtime="20181211 14:40:53.949" status="PASS" starttime="20181211 14:40:31.304"></status>
</test>
<test id="s1-t12" name="Ensure that different autonomous systems can communicate with each other">
<kw library="Resource" name="Ensure that different autonomous systems can communicate with each other">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Autonomous system communication validated</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:40:53.952">Autonomous system communication validated</msg>
<status endtime="20181211 14:40:53.953" status="PASS" starttime="20181211 14:40:53.952"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Verify Ping operation from PC-1 to Ubuntu</arg>
</arguments>
<status endtime="20181211 14:40:53.954" status="PASS" starttime="20181211 14:40:53.953"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>ping router</arg>
<arg>PC-1</arg>
<arg>ping</arg>
<arg>${Host2_IP}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="operational_ph" name="Ping Router">
<arguments>
<arg>PC-1</arg>
<arg>ping</arg>
<arg>${Host2_IP}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:41:09.222">ping
b'ping 192.168.80.20 -c 5 \r\n84 bytes from 192.168.80.20 icmp_seq=1 ttl=60 time=67.599 ms\r\n84 bytes from 192.168.80.20 icmp_seq=2 ttl=60 time=67.660 ms\r\n84 bytes from 192.168.80.20 icmp_seq=3 ttl=60 time=55.573 ms\r\n84 bytes from 192.168.80.20 icmp_seq=4 ttl=60 time=64.074 ms\r\n84 bytes from 192.168.80.20 icmp_seq=5 ttl=60 time=42.192 ms\r\n'</msg>
<status endtime="20181211 14:41:09.223" status="PASS" starttime="20181211 14:40:53.955"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:41:09.223">${result} = True</msg>
<status endtime="20181211 14:41:09.223" status="PASS" starttime="20181211 14:40:53.954"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Unable to reach ONL from PC-1 to Ubuntu</arg>
</arguments>
<status endtime="20181211 14:41:09.225" status="PASS" starttime="20181211 14:41:09.224"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Verify Ping operation from Ubuntu to PC-1</arg>
</arguments>
<status endtime="20181211 14:41:09.225" status="PASS" starttime="20181211 14:41:09.225"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>ping router</arg>
<arg>Ubuntu</arg>
<arg>ping</arg>
<arg>${Host1_IP}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="operational_ph" name="Ping Router">
<arguments>
<arg>Ubuntu</arg>
<arg>ping</arg>
<arg>${Host1_IP}</arg>
</arguments>
<msg level="INFO" timestamp="20181211 14:42:04.337">ping</msg>
<status endtime="20181211 14:42:04.338" status="PASS" starttime="20181211 14:41:09.226"></status>
</kw>
<msg level="INFO" timestamp="20181211 14:42:04.338">${result} = None</msg>
<status endtime="20181211 14:42:04.338" status="PASS" starttime="20181211 14:41:09.226"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Unable to reach VPCS from Ubuntu to PC-1</arg>
</arguments>
<status endtime="20181211 14:42:04.340" status="PASS" starttime="20181211 14:42:04.339"></status>
</kw>
<status endtime="20181211 14:42:04.340" status="PASS" starttime="20181211 14:40:53.951"></status>
</kw>
<status critical="yes" endtime="20181211 14:42:04.341" status="PASS" starttime="20181211 14:40:53.950"></status>
</test>
<doc>A test suite with tests for configuring BGP.
Topology:-
____________________________
| R1 AS2 |
| /  |
| /  |
| R2 R3 |
|_________|________|_________|
| |
______|__ ___|______
| AS1| | AS3|
| R4 | | R5 |
|_________| |__________|
Testplan Goals:-
1. Configure IP addresses as per the topology.
2. Each Router should have a loopback0 interface.
3. Configure OSPF within AS2 to advertise the loopback0 interfaces.
Don't advertise or run OSPF on the links interconnecting AS1 and AS3.
4. Configure IBGP between R2 and R3. Source the BGP updates from the loopback0 interfaces.
5. Enable BGP synchronisation.
6. Configure EBGP between R2 and R4.
7. Configure EBGP between R3 and R5.
8. Advertise the loopback0 interfaces on R4 and R5.
9. Ensure AS1 and AS3 can communicate with each other without removing the BGP synchronisation command.</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Payal Jain
Date 19 Dec 2016
Executed At ${HOST}
Test Framework Robot Framework Python</item>
</metadata>
<status endtime="20181211 14:42:04.345" status="PASS" starttime="20181211 14:35:51.839"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="12">Critical Tests</stat>
<stat fail="0" pass="12">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat id="s1" fail="0" pass="12" name="BGP OSPF Test with GNS3">BGP OSPF Test with GNS3</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
